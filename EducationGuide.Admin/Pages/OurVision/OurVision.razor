@page "/ourvision"
@using Core.Models.Domain;
@using Core.Models.Repository;
@using Microsoft.EntityFrameworkCore
@inject ISectionRepository _sectionRepository
@inject IPageRepository _pageRepository
@inject IConfiguration config
<AuthorizeView>
<Authorized>

<RadzenDataGrid style="height: 800px" @ref="grid0"  Data="@_sections" AllowPaging="true" PageSize="4" PagerHorizontalAlign="HorizontalAlign.Center" TItem="Section" ColumnWidth="200px" 
RowSelect="@EditRow">
    <Columns>
        <RadzenDataGridColumn TItem="Section" Property="ClassName" Filterable="false" Title="Section" Frozen="true" Width="80px" TextAlign="TextAlign.Center" />
        <RadzenDataGridColumn TItem="Section" Property="Title" Title="Title" Frozen="true" Width="160px" TextAlign="TextAlign.Center">
            <Template Context="Section">
                <span style="white-space: normal;">@Section.Title</span>
            </Template>
        </RadzenDataGridColumn>

        <RadzenDataGridColumn TItem="Section" Title="Image" Frozen="true" Sortable="false" Filterable="false" Width="150px" TextAlign="TextAlign.Center" >
            <Template Context="Section">
                @if (!string.IsNullOrEmpty(Section.ImageUrl))
                {
                        <RadzenImage Path="@CreateWebPath(Section.ImageUrl)" style="width: 150px; height: 150px; object-fit: cover;" />
                }
                else
                {
                    <text>No Image</text>
                }
            </Template>
        </RadzenDataGridColumn>        

        <RadzenDataGridColumn TItem="Section" Title="Background" Frozen="true" Sortable="false" Filterable="false" Width="150px" TextAlign="TextAlign.Center" >
            <Template Context="Section">
                @if (!string.IsNullOrEmpty(Section.BackgroundUrl))
                {
                                    <RadzenImage Path="@CreateWebPath(Section.BackgroundUrl)" style="width: 150px; height: 150px; object-fit: cover;" />
                }
                else
                {
                    <text>No Background</text>

                }
            </Template>
        </RadzenDataGridColumn>

        <RadzenDataGridColumn TItem="Section" Property="Content" Title="Content" Frozen="true" Width="160px" TextAlign="TextAlign.Center">
            <Template Context="Section">
                <span style="white-space: normal;">@Section.Content</span>
            </Template>
        </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="Section" Title="Button Link" Width="50px">
                    <Template Context="Section">
                        <span>@DisplayButton(Section.ButtonUrl)</span>
                    </Template>
    </RadzenDataGridColumn>
    </Columns>
</RadzenDataGrid>
</Authorized>
<NotAuthorized>You are not authorized</NotAuthorized>
</AuthorizeView>


@code {
    [Inject]
    protected IJSRuntime JSRuntime { get; set; }

    [Inject]
    protected NavigationManager NavigationManager { get; set; }

    [Inject]
    protected DialogService DialogService { get; set; }

    [Inject]
    protected TooltipService TooltipService { get; set; }

    [Inject]
    protected ContextMenuService ContextMenuService { get; set; }

    [Inject]
    protected NotificationService NotificationService { get; set; }



    protected IEnumerable<Section> _sections;
    protected Page _page = new Page();
    protected RadzenDataGrid<Section> grid0;
    protected override async Task OnInitializedAsync()
    {
        _page = await _pageRepository.GetByUrlAsync("/ourvision");
        _sections = await _sectionRepository.GetSectionsByPageId(_page.Id);
    }



    protected async Task EditRow(Section args)
    {
        await DialogService.OpenAsync<EditSection>($"EditSection {args.Id}", new Dictionary<string, object> { { "Id", args.Id } });
    }

    private string CreateWebPath(string relativePath)
    {
        return Path.Combine(config.GetValue<string>("WebStorageRoot")!, relativePath);
    }

    private string? DisplayButton(string url)
    {

        var _pageName = _pageRepository.GetPageByUrl(url);
        if (url == null)
        {
            return "No button for this section";
        }
        return _pageName.NamePage;

    }
}